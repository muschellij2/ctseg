% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctseg.R, R/ctseg_full.R, R/zzz_utils.R
\name{predict_ctseg}
\alias{predict_ctseg}
\alias{register_ctseg_nifty}
\alias{download_ctseg_model}
\alias{download_ctbet_model}
\alias{load_ctbet_model}
\alias{load_ctseg_model}
\alias{check_ct_requirements}
\title{Predict Head Segmentation of CT images}
\usage{
predict_ctseg(
  image,
  register = FALSE,
  verbose = TRUE,
  ...,
  outdir = NULL,
  type = c("NPH", "Normal_Only")
)

register_ctseg_nifty(image, verbose = TRUE, ...)

download_ctseg_model(outdir = NULL, type = c("NPH", "Normal_Only"))

download_ctbet_model(
  outdir = NULL,
  type = c("unet_CT_SS_20171114_170726.h5", "unet_CT_SS_3D_201843_163521.h5")
)

load_ctbet_model(
  outdir = NULL,
  type = c("unet_CT_SS_20171114_170726.h5", "unet_CT_SS_3D_201843_163521.h5")
)

load_ctseg_model(outdir = NULL, type = c("NPH", "Normal_Only"))

check_ct_requirements()
}
\arguments{
\item{image}{image to segment using `HeadCTSegmentation` model}

\item{register}{should image registration be done for prediction? The
prediction will be inverted back into native space}

\item{verbose}{print diagnostic messages}

\item{...}{arguments passed to registration functions}

\item{outdir}{Output directory for `CTSeg` model}

\item{type}{Specific model to download}
}
\value{
A list of the output images and predictions.
}
\description{
Predict Head Segmentation of CT images

CTSeg Model
}
\note{
\url{https://github.com/jasonccai/HeadCTSegmentation/}
}
\examples{
authed = !inherits(try(googledrive::drive_auth()), "try-error")
if (check_ct_requirements() && authed) {
  url = paste0("https://github.com/jasonccai/HeadCTSegmentation/",
               "raw/master/image_data_predict/1.nii.gz")
  image = tempfile(fileext = ".nii.gz")
  utils::download.file(url, destfile = image, quiet = FALSE)
  out = predict_ctseg(image, register = FALSE)
}
\donttest{
if (check_ct_requirements() && authed) {
  reg_out = predict_ctseg(image, register = TRUE, verbose = 2)
}
}
\donttest{
authed = !inherits(try(googledrive::drive_auth()), "try-error")

if (check_ct_requirements() && authed) {
destfile = file.path(tempdir(), "01.tar.xz")
dl = download.file(
  "https://archive.data.jhu.edu/api/access/datafile/1311?gbrecs=true",
  destfile = destfile)
res = untar(tarfile = destfile, exdir = tempdir())
fname = file.path(tempdir(), "01", "BRAIN_1_Anonymized.nii.gz")
mask = file.path(tempdir(), "01", "BRAIN_1_Anonymized_Mask.nii.gz")
tdir = tempfile()
dir.create(tdir)
download_ctseg_model(outdir = tdir)
mod = load_ctseg_model(outdir = tdir)
predict_ctseg(fname, mask = mask, outdir = tdir)
}
}
}
